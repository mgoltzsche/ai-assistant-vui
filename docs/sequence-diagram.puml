@startuml

actor user
boundary vui
control audioInput as "Microphone"
control audioOutput as "Speakers"
control vad as "Silero VAD\n(Voice Activity Detection)"
control stt
control tts
boundary whisper as "Whisper API\n(Speech-To-Text)"
control wakewordFilter
control chat
control tools
entity conversation as "conversation /\nchat history"
boundary llm as "Conversational LLM"

vui -> audioInput : RecordAudio
user -> vui : talks \ \nvoice command
vui -\ vad : DetectVoiceActivity
loop each detected voice audio snippet
  vad -\ stt : Transcribe(audio)
  activate stt
  stt -> whisper : Speech-To-Text (STT):\nPOST /v1/audio/transcriptions
  activate whisper
  deactivate whisper
  stt -> wakewordFilter : FilterByWakeWord(text)
  deactivate stt
  activate wakewordFilter
  alt STT result contains wake word
    wakewordFilter -> conversation : AddUserRequest(msg)
    activate conversation
    conversation -> conversation : incrementRequestCounter()
    conversation -> conversation : assign request\nnumber to message
    deactivate conversation
    wakewordFilter -> chat : ChatCompletion()
    deactivate wakewordFilter
    activate chat
    chat -> conversation : GetMessages()
    chat -> llm : Exchange chat history\nfor AI response:\nPOST /v1/chat/completions
    alt LLM wants to call tool(s)
      loop tool call
        chat -> tools : call tool
        activate tools
        tools -> conversation : AddToolResponse(result)
        deactivate tools
      end
      chat -> conversation : GetMessages()
      chat -> llm : POST /v1/chat/completions
    end
    chat -> chat : collect/split response into\na message per sentence
    note right
      This is to be able to interrupt the assistant after each sentence.
    end note
    loop each response sentence
      chat -> tts : GenerateAudio(sentence)
      deactivate chat
      activate tts
      alt sentence.RequestNum == conversation.RequestCounter
        tts -> audioOutput : play generated audio
        activate audioOutput
        audioOutput -> conversation : AddAIResponse(sentence)
        activate conversation
        deactivate conversation
        deactivate audioOutput
      end
      deactivate tts
    end
  end
end

@enduml
